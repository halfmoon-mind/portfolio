---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

// 현재 URL 생성
const currentUrl = new URL(Astro.url.pathname, Astro.site).toString();

// ISO 형식 날짜 변환 함수
const formatISODate = (date: Date) => {
	return date.toISOString();
};

// 구조화된 데이터 생성
const articleSchema = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	"headline": title,
	"description": description,
	"image": heroImage ? new URL(heroImage, Astro.site).toString() : "",
	"datePublished": formatISODate(pubDate),
	"dateModified": updatedDate ? formatISODate(updatedDate) : formatISODate(pubDate),
	"author": {
		"@type": "Person",
		"name": "심상현"
	},
	"publisher": {
		"@type": "Organization",
		"name": "심상현",
		"logo": {
			"@type": "ImageObject",
			"url": new URL("/favicon.svg", Astro.site).toString()
		}
	},
	"mainEntityOfPage": {
		"@type": "WebPage",
		"@id": currentUrl
	}
};
---

<html lang="ko">
	<head>
		<BaseHead title={title} description={description} image={heroImage} article={true} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
				max-height: 500px;
				width: 100%;
				object-fit: cover;
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
		<!-- Schema.org 구조화된 데이터 -->
		<script type="application/ld+json" set:html={JSON.stringify(articleSchema)} />
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt={title} style="max-height: 500px; object-fit: cover;" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
